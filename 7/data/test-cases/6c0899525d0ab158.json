{"uid":"6c0899525d0ab158","name":"Verify Bank Account Empty FIelds","fullName":"Bank Account/Verify Bank Account#Verify Bank Account Empty FIelds","historyId":"aefd27f3-cfbf-4727-a53f-fa15947a28c9","time":{"start":1709910036849,"stop":1709910036900,"duration":51},"status":"failed","statusMessage":"Status code is 400, Status code name has string, Verify that response body contains message","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code name has string, Verify that response body contains message","steps":[{"name":"Status code is 400","time":{"start":1709910036898,"stop":1709910036898,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 429","statusTrace":"Error: expected response to have status code 400 but got 429\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code name has string","time":{"start":1709910036898,"stop":1709910036898,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Too Many Requests'","statusTrace":"Error: expected response to have status reason 'Bad Request' but got 'Too Many Requests'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:8:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:7:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that response body contains message","time":{"start":1709910036899,"stop":1709910036899,"duration":0},"status":"failed","statusMessage":"expected '{\\n  \"error\": {\\n    \"code\": \"OVER_RA…' to include 'bank_id is not allowed to be empty'","statusTrace":"Error: expected '{\\n  \"error\": {\\n    \"code\": \"OVER_RA…' to include 'bank_id is not allowed to be empty'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:11:38)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:10:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1ab85e41e764158f","name":"Request Headers","source":"1ab85e41e764158f.json","type":"application/json","size":662},{"uid":"93c105c735770869","name":"Request Body","source":"93c105c735770869.txt","type":"text/plain","size":46},{"uid":"12644e318907d594","name":"Response Headers","source":"12644e318907d594.json","type":"application/json","size":318},{"uid":"10cad9ba182c7325","name":"Response Body","source":"10cad9ba182c7325.txt","type":"text/plain","size":190}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Bank Account"},{"name":"suite","value":"Verify Bank Account"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vigil.lendsqr.com/kolo.finance/bank-accounts/validate"},{"name":"Response Code","value":"429"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"6c0899525d0ab158.json","parameterValues":["POST - https://vigil.lendsqr.com/kolo.finance/bank-accounts/validate","429"]}