{"uid":"c0627ac45b75396","name":"Add Bank Account","fullName":"Bank Account/Add Bank Account#Add Bank Account","historyId":"53c6e9b0-8879-41fe-9c2c-db17b25a5242","time":{"start":1709909640573,"stop":1709909640629,"duration":56},"status":"failed","statusMessage":"accountId, Status code is 200, Status code name has string, Account number is a non empty string, Your test name","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"accountId, Status code is 200, Status code name has string, Account number is a non empty string, Your test name","steps":[{"name":"accountId","time":{"start":1709909640624,"stop":1709909640624,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'id')","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code is 200","time":{"start":1709909640625,"stop":1709909640625,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 400","statusTrace":"Error: expected response to have status code 200 but got 400\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:10:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code name has string","time":{"start":1709909640626,"stop":1709909640626,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'OK' but got 'Bad Request'","statusTrace":"Error: expected response to have status reason 'OK' but got 'Bad Request'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:13:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:12:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Account number is a non empty string","time":{"start":1709909640627,"stop":1709909640627,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'account_number')","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Your test name","time":{"start":1709909640627,"stop":1709909640627,"duration":0},"status":"failed","statusMessage":"expected undefined to exist","statusTrace":"Error: expected undefined to exist\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:21:32)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:19:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ec512daa9a59dd42","name":"Request Headers","source":"ec512daa9a59dd42.json","type":"application/json","size":663},{"uid":"b72c2deac902e7d8","name":"Request Body","source":"b72c2deac902e7d8.txt","type":"text/plain","size":144},{"uid":"24f4631c370f0500","name":"Response Headers","source":"24f4631c370f0500.json","type":"application/json","size":586},{"uid":"30e11144be7d7eb1","name":"Response Body","source":"30e11144be7d7eb1.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Bank Account"},{"name":"suite","value":"Add Bank Account"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vigil.lendsqr.com/kolo.finance/bank-accounts"},{"name":"Response Code","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c0627ac45b75396.json","parameterValues":["POST - https://vigil.lendsqr.com/kolo.finance/bank-accounts","400"]}