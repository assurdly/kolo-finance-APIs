{"uid":"570ffd3bc35e9a8f","name":"Verify Bank Account With Incomplete Account Number","fullName":"Bank Account/Verify Bank Account#Verify Bank Account With Incomplete Account Number","historyId":"7a6b3e8e-9729-4e78-982c-7ad3d6eafcb6","time":{"start":1709909639710,"stop":1709909639753,"duration":43},"status":"failed","statusMessage":"Status code is 400, Status code name has string, Body matches message","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code name has string, Body matches message","steps":[{"name":"Status code is 400","time":{"start":1709909639751,"stop":1709909639751,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 429","statusTrace":"Error: expected response to have status code 400 but got 429\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code name has string","time":{"start":1709909639751,"stop":1709909639751,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Too Many Requests'","statusTrace":"Error: expected response to have status reason 'Bad Request' but got 'Too Many Requests'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:8:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:7:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Body matches message","time":{"start":1709909639752,"stop":1709909639752,"duration":0},"status":"failed","statusMessage":"expected '{\\n  \"error\": {\\n    \"code\": \"OVER_RA…' to include 'account_number length must be 10 char…'","statusTrace":"Error: expected '{\\n  \"error\": {\\n    \"code\": \"OVER_RA…' to include 'account_number length must be 10 char…'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:11:38)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:10:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9762e308290a297e","name":"Request Headers","source":"9762e308290a297e.json","type":"application/json","size":662},{"uid":"be9148678b3540fa","name":"Request Body","source":"be9148678b3540fa.txt","type":"text/plain","size":56},{"uid":"7ac8711cfbd49b09","name":"Response Headers","source":"7ac8711cfbd49b09.json","type":"application/json","size":318},{"uid":"f22bdd2d82de917c","name":"Response Body","source":"f22bdd2d82de917c.txt","type":"text/plain","size":190}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Bank Account"},{"name":"suite","value":"Verify Bank Account"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vigil.lendsqr.com/kolo.finance/bank-accounts/validate"},{"name":"Response Code","value":"429"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"570ffd3bc35e9a8f.json","parameterValues":["POST - https://vigil.lendsqr.com/kolo.finance/bank-accounts/validate","429"]}