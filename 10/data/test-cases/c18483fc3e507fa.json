{"uid":"c18483fc3e507fa","name":"Get Notifications","fullName":"Notifications/Get Notification#Get Notifications","historyId":"53cdee15-91c5-42a4-9a42-e778a34bf5fd","time":{"start":1710144081431,"stop":1710144081469,"duration":38},"status":"failed","statusMessage":"Status code is 200, Status code name has string, Verify that response body contains data","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, Status code name has string, Verify that response body contains data","steps":[{"name":"Status code is 200","time":{"start":1710144081466,"stop":1710144081466,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 429","statusTrace":"Error: expected response to have status code 200 but got 429\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code name has string","time":{"start":1710144081466,"stop":1710144081466,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'OK' but got 'Too Many Requests'","statusTrace":"Error: expected response to have status reason 'OK' but got 'Too Many Requests'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:8:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:7:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that response body contains message","time":{"start":1710144081467,"stop":1710144081467,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify that response body contains data","time":{"start":1710144081467,"stop":1710144081467,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"Error: expected undefined to be an array\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:15:36)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:13:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"db908920cdf01ab1","name":"Request Headers","source":"db908920cdf01ab1.json","type":"application/json","size":594},{"uid":"b98c8a6f7dccade5","name":"Response Headers","source":"b98c8a6f7dccade5.json","type":"application/json","size":318},{"uid":"28698e9cd2746205","name":"Response Body","source":"28698e9cd2746205.txt","type":"text/plain","size":190}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Notifications"},{"name":"suite","value":"Get Notification"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://vigil.lendsqr.com/kolo.finance/notifications"},{"name":"Response Code","value":"429"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c18483fc3e507fa.json","parameterValues":["GET - https://vigil.lendsqr.com/kolo.finance/notifications","429"]}