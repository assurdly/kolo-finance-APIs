{"uid":"425b8a9494c5eff5","name":"Update Bank Account","fullName":"Bank Account/Update Bank Account#Update Bank Account","historyId":"8f2a805d-0702-480d-8847-39c7cf6d3d89","time":{"start":1710144079842,"stop":1710144079882,"duration":40},"status":"failed","statusMessage":"Status code is 200, Status code name has string, Verify that response body contains data","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, Status code name has string, Verify that response body contains data","steps":[{"name":"Status code is 200","time":{"start":1710144079878,"stop":1710144079878,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 429","statusTrace":"Error: expected response to have status code 200 but got 429\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code name has string","time":{"start":1710144079879,"stop":1710144079879,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'OK' but got 'Too Many Requests'","statusTrace":"Error: expected response to have status reason 'OK' but got 'Too Many Requests'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:8:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:7:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that response body contains data","time":{"start":1710144079880,"stop":1710144079880,"duration":0},"status":"failed","statusMessage":"expected '{\\n  \"error\": {\\n    \"code\": \"OVER_RA…' to include 'data'","statusTrace":"Error: expected '{\\n  \"error\": {\\n    \"code\": \"OVER_RA…' to include 'data'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:11:38)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:10:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7a23d950a1f7d6b8","name":"Request Headers","source":"7a23d950a1f7d6b8.json","type":"application/json","size":663},{"uid":"ee75477b9e4c6fca","name":"Request Body","source":"ee75477b9e4c6fca.txt","type":"text/plain","size":114},{"uid":"d8013b47b7c70f77","name":"Response Headers","source":"d8013b47b7c70f77.json","type":"application/json","size":318},{"uid":"59ad554caf662ae8","name":"Response Body","source":"59ad554caf662ae8.txt","type":"text/plain","size":190}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Bank Account"},{"name":"suite","value":"Update Bank Account"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PATCH - https://vigil.lendsqr.com/kolo.finance/bank-accounts/a0af9399-1029-4928-8bc4-2e49156100df"},{"name":"Response Code","value":"429"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"425b8a9494c5eff5.json","parameterValues":["PATCH - https://vigil.lendsqr.com/kolo.finance/bank-accounts/a0af9399-1029-4928-8bc4-2e49156100df","429"]}