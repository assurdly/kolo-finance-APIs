{"uid":"31c19ae92b49d071","name":"Add Bank Account Invalid Acc Number","fullName":"Bank Account/Add Bank Account#Add Bank Account Invalid Acc Number","historyId":"6c024689-b7ee-40b9-8e58-7afe51833475","time":{"start":1710143438974,"stop":1710143439028,"duration":54},"status":"failed","statusMessage":"Status code is 400, Status code name has string, Verify that response body contains message","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code name has string, Verify that response body contains message","steps":[{"name":"Status code is 400","time":{"start":1710143439024,"stop":1710143439024,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 429","statusTrace":"Error: expected response to have status code 400 but got 429\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code name has string","time":{"start":1710143439025,"stop":1710143439025,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Too Many Requests'","statusTrace":"Error: expected response to have status reason 'Bad Request' but got 'Too Many Requests'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:8:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:7:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that response body contains message","time":{"start":1710143439026,"stop":1710143439026,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'account_number length must be 10 char…'","statusTrace":"Error: expected undefined to deeply equal 'account_number length must be 10 char…'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:12:36)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:10:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"aef3bf08fe06b94a","name":"Request Headers","source":"aef3bf08fe06b94a.json","type":"application/json","size":663},{"uid":"10a4da67368de01d","name":"Request Body","source":"10a4da67368de01d.txt","type":"text/plain","size":167},{"uid":"40f20e37b7028289","name":"Response Headers","source":"40f20e37b7028289.json","type":"application/json","size":318},{"uid":"909e2176ce05d87f","name":"Response Body","source":"909e2176ce05d87f.txt","type":"text/plain","size":190}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Bank Account"},{"name":"suite","value":"Add Bank Account"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vigil.lendsqr.com/kolo.finance/bank-accounts"},{"name":"Response Code","value":"429"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"31c19ae92b49d071.json","parameterValues":["POST - https://vigil.lendsqr.com/kolo.finance/bank-accounts","429"]}